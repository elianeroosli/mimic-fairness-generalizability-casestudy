TRAINING THE CHANNEL-WISE LSTM without additional data
/share/pi/boussard/eroosli_work/benchmarking/models/ihm/main.py:10: DeprecationWarning: the imp module is deprecated in favour of importlib; see the module's documentation for alternative uses
  import imp
Using TensorFlow backend.
2020-06-01 16:41:45.826893: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer.so.6'; dlerror: libnvinfer.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/sw/open/oracle/18.5.0.0/lib/:
2020-06-01 16:41:45.833466: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libnvinfer_plugin.so.6'; dlerror: libnvinfer_plugin.so.6: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/sw/open/oracle/18.5.0.0/lib/:
2020-06-01 16:41:45.833484: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:30] Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
normalizer state: /share/pi/boussard/eroosli_work/benchmarking/models/ihm/ihm_ts1.0.input_str_previous.start_time_zero.normalizer
==> using model models/keras_models/channel_wise_lstms.py
76
==> not used params in network class: dict_keys(['batch_size', 'beta_1', 'data', 'data_name', 'epochs', 'imputation', 'l1', 'l2', 'load_state', 'lr', 'mode', 'network', 'normalizer_state', 'optimizer', 'output_dir', 'prefix', 'save_every', 'small_part', 'target_repl_coef', 'timestep', 'verbose'])
==> excluded demographics: ['Ethnicity', 'Gender', 'Insurance']
==> found 17 channels: ['Capillary refill rate', 'Diastolic blood pressure', 'Fraction inspired oxygen', 'Glascow coma scale eye opening', 'Glascow coma scale motor response', 'Glascow coma scale total', 'Glascow coma scale verbal response', 'Glucose', 'Heart rate', 'Height', 'Mean blood pressure', 'Oxygen saturation', 'Respiratory rate', 'Systolic blood pressure', 'Temperature', 'Weight', 'pH']
2020-06-01 16:41:49.754552: W tensorflow/stream_executor/platform/default/dso_loader.cc:55] Could not load dynamic library 'libcuda.so.1'; dlerror: libcuda.so.1: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /share/sw/open/oracle/18.5.0.0/lib/:
2020-06-01 16:41:49.754589: E tensorflow/stream_executor/cuda/cuda_driver.cc:351] failed call to cuInit: UNKNOWN ERROR (303)
2020-06-01 16:41:49.754611: I tensorflow/stream_executor/cuda/cuda_diagnostics.cc:156] kernel driver does not appear to be running on this host (slurm-compute-4vw5f): /proc/driver/nvidia/version does not exist
2020-06-01 16:41:49.754797: I tensorflow/core/platform/cpu_feature_guard.cc:142] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2020-06-01 16:41:49.783863: I tensorflow/core/platform/profile_utils/cpu_utils.cc:94] CPU Frequency: 2100000000 Hz
2020-06-01 16:41:49.784133: I tensorflow/compiler/xla/service/service.cc:168] XLA service 0x56235dce9cb0 initialized for platform Host (this does not guarantee that XLA will be used). Devices:
2020-06-01 16:41:49.784164: I tensorflow/compiler/xla/service/service.cc:176]   StreamExecutor device (0): Host, Default Version
==> model.final_name: 2020-06-01_9-41.k_clstms.none
==> compiling the model
Model: "network_1"
__________________________________________________________________________________________________
Layer (type)                    Output Shape         Param #     Connected to                     
==================================================================================================
X (InputLayer)                  (None, None, 76)     0                                            
__________________________________________________________________________________________________
masking_1 (Masking)             (None, None, 76)     0           X[0][0]                          
__________________________________________________________________________________________________
slice_1 (Slice)                 (None, None, 3)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_2 (Slice)                 (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_3 (Slice)                 (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_4 (Slice)                 (None, None, 9)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_5 (Slice)                 (None, None, 13)     0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_6 (Slice)                 (None, None, 14)     0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_7 (Slice)                 (None, None, 13)     0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_8 (Slice)                 (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_9 (Slice)                 (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_10 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_11 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_12 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_13 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_14 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_15 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_16 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
slice_17 (Slice)                (None, None, 2)      0           masking_1[0][0]                  
__________________________________________________________________________________________________
bidirectional_1 (Bidirectional) (None, None, 8)      256         slice_1[0][0]                    
__________________________________________________________________________________________________
bidirectional_2 (Bidirectional) (None, None, 8)      224         slice_2[0][0]                    
__________________________________________________________________________________________________
bidirectional_3 (Bidirectional) (None, None, 8)      224         slice_3[0][0]                    
__________________________________________________________________________________________________
bidirectional_4 (Bidirectional) (None, None, 8)      448         slice_4[0][0]                    
__________________________________________________________________________________________________
bidirectional_5 (Bidirectional) (None, None, 8)      576         slice_5[0][0]                    
__________________________________________________________________________________________________
bidirectional_6 (Bidirectional) (None, None, 8)      608         slice_6[0][0]                    
__________________________________________________________________________________________________
bidirectional_7 (Bidirectional) (None, None, 8)      576         slice_7[0][0]                    
__________________________________________________________________________________________________
bidirectional_8 (Bidirectional) (None, None, 8)      224         slice_8[0][0]                    
__________________________________________________________________________________________________
bidirectional_9 (Bidirectional) (None, None, 8)      224         slice_9[0][0]                    
__________________________________________________________________________________________________
bidirectional_10 (Bidirectional (None, None, 8)      224         slice_10[0][0]                   
__________________________________________________________________________________________________
bidirectional_11 (Bidirectional (None, None, 8)      224         slice_11[0][0]                   
__________________________________________________________________________________________________
bidirectional_12 (Bidirectional (None, None, 8)      224         slice_12[0][0]                   
__________________________________________________________________________________________________
bidirectional_13 (Bidirectional (None, None, 8)      224         slice_13[0][0]                   
__________________________________________________________________________________________________
bidirectional_14 (Bidirectional (None, None, 8)      224         slice_14[0][0]                   
__________________________________________________________________________________________________
bidirectional_15 (Bidirectional (None, None, 8)      224         slice_15[0][0]                   
__________________________________________________________________________________________________
bidirectional_16 (Bidirectional (None, None, 8)      224         slice_16[0][0]                   
__________________________________________________________________________________________________
bidirectional_17 (Bidirectional (None, None, 8)      224         slice_17[0][0]                   
__________________________________________________________________________________________________
concatenate_1 (Concatenate)     (None, None, 136)    0           bidirectional_1[0][0]            
                                                                 bidirectional_2[0][0]            
                                                                 bidirectional_3[0][0]            
                                                                 bidirectional_4[0][0]            
                                                                 bidirectional_5[0][0]            
                                                                 bidirectional_6[0][0]            
                                                                 bidirectional_7[0][0]            
                                                                 bidirectional_8[0][0]            
                                                                 bidirectional_9[0][0]            
                                                                 bidirectional_10[0][0]           
                                                                 bidirectional_11[0][0]           
                                                                 bidirectional_12[0][0]           
                                                                 bidirectional_13[0][0]           
                                                                 bidirectional_14[0][0]           
                                                                 bidirectional_15[0][0]           
                                                                 bidirectional_16[0][0]           
                                                                 bidirectional_17[0][0]           
__________________________________________________________________________________________________
lstm_18 (LSTM)                  (None, 32)           21632       concatenate_1[0][0]              
__________________________________________________________________________________________________
dropout_1 (Dropout)             (None, 32)           0           lstm_18[0][0]                    
__________________________________________________________________________________________________
dense_1 (Dense)                 (None, 1)            33          dropout_1[0][0]                  
==================================================================================================
Total params: 26,817
Trainable params: 26,817
Non-trainable params: 0
__________________________________________________________________________________________________
==> training
Train on 4628 samples, validate on 817 samples
Epoch 1/100
 - 270s - loss: 0.3097 - val_loss: 0.2584

==>predicting on train



confusion matrix:
[[2152    3]
 [ 240   15]]

stratified metric for:
demographic variable: Insurance
value: Medicare

overall metrics:
prevalence of IHM = 0.105809
average predicted risk of IHM = 0.09943199902772903
difference in average predicted and observed risk = -0.006377000972270966
number samples = 2410
accuracy = 0.89917
precision class 0 = 0.899666
precision class 1 = 0.833333
recall class 0 = 0.998608
recall class 1 = 0.058824
false negative rate = 0.941176
false positive rate = 0.001392
positive prediction rate = 0.007469
AUC of ROC = 0.803195
AUC of PRC = 0.413134
min(+P, Se) = 0.427451

-------------------------------

confusion matrix:
[[1166   13]
 [ 109    9]]

stratified metric for:
demographic variable: Insurance
value: Private

overall metrics:
prevalence of IHM = 0.090979
average predicted risk of IHM = 0.10764399915933609
difference in average predicted and observed risk = 0.016664999159336086
number samples = 1297
accuracy = 0.905937
precision class 0 = 0.91451
precision class 1 = 0.409091
recall class 0 = 0.988974
recall class 1 = 0.076271
false negative rate = 0.923729
false positive rate = 0.011026
positive prediction rate = 0.016962
AUC of ROC = 0.823939
AUC of PRC = 0.317372
min(+P, Se) = 0.386555

-------------------------------

confusion matrix:
[[653   3]
 [ 62  12]]

stratified metric for:
demographic variable: Insurance
value: Medicaid

overall metrics:
prevalence of IHM = 0.10137
average predicted risk of IHM = 0.11489100009202957
difference in average predicted and observed risk = 0.01352100009202957
number samples = 730
accuracy = 0.910959
precision class 0 = 0.913287
precision class 1 = 0.8
recall class 0 = 0.995427
recall class 1 = 0.162162
false negative rate = 0.837838
false positive rate = 0.004573
positive prediction rate = 0.020548
AUC of ROC = 0.812644
AUC of PRC = 0.419251
min(+P, Se) = 0.371795

-------------------------------

confusion matrix:
[[166   1]
 [ 19   5]]

stratified metric for:
demographic variable: Insurance
value: Other

overall metrics:
prevalence of IHM = 0.125654
average predicted risk of IHM = 0.10676500201225281
difference in average predicted and observed risk = -0.01888899798774718
number samples = 191
accuracy = 0.895288
precision class 0 = 0.897297
precision class 1 = 0.833333
recall class 0 = 0.994012
recall class 1 = 0.208333
false negative rate = 0.791667
false positive rate = 0.005988
positive prediction rate = 0.031414
AUC of ROC = 0.869511
AUC of PRC = 0.633731
min(+P, Se) = 0.6

-------------------------------

confusion matrix:
[[2460   14]
 [ 233   22]]

stratified metric for:
demographic variable: Gender
value: M

overall metrics:
prevalence of IHM = 0.093441
average predicted risk of IHM = 0.10031300038099289
difference in average predicted and observed risk = 0.006872000380992893
number samples = 2729
accuracy = 0.909491
precision class 0 = 0.913479
precision class 1 = 0.611111
recall class 0 = 0.994341
recall class 1 = 0.086275
false negative rate = 0.913725
false positive rate = 0.005659
positive prediction rate = 0.013192
AUC of ROC = 0.812935
AUC of PRC = 0.346292
min(+P, Se) = 0.4

-------------------------------

confusion matrix:
[[1677    6]
 [ 197   19]]

stratified metric for:
demographic variable: Gender
value: F

overall metrics:
prevalence of IHM = 0.113744
average predicted risk of IHM = 0.1104549989104271
difference in average predicted and observed risk = -0.0032890010895729044
number samples = 1899
accuracy = 0.893102
precision class 0 = 0.894877
precision class 1 = 0.76
recall class 0 = 0.996435
recall class 1 = 0.087963
false negative rate = 0.912037
false positive rate = 0.003565
positive prediction rate = 0.013165
AUC of ROC = 0.811119
AUC of PRC = 0.430296
min(+P, Se) = 0.449074

-------------------------------

confusion matrix:
[[545   4]
 [ 70   7]]

stratified metric for:
demographic variable: Ethnicity
value: ASIAN

overall metrics:
prevalence of IHM = 0.123003
average predicted risk of IHM = 0.11317499727010727
difference in average predicted and observed risk = -0.009828002729892732
number samples = 626
accuracy = 0.881789
precision class 0 = 0.886179
precision class 1 = 0.636364
recall class 0 = 0.992714
recall class 1 = 0.090909
false negative rate = 0.909091
false positive rate = 0.007286
positive prediction rate = 0.017572
AUC of ROC = 0.837627
AUC of PRC = 0.411917
min(+P, Se) = 0.453488

-------------------------------

confusion matrix:
[[2243    6]
 [ 200    8]]

stratified metric for:
demographic variable: Ethnicity
value: WHITE

overall metrics:
prevalence of IHM = 0.084656
average predicted risk of IHM = 0.09381800144910812
difference in average predicted and observed risk = 0.009162001449108129
number samples = 2457
accuracy = 0.916158
precision class 0 = 0.918133
precision class 1 = 0.571429
recall class 0 = 0.997332
recall class 1 = 0.038462
false negative rate = 0.961538
false positive rate = 0.002668
positive prediction rate = 0.005698
AUC of ROC = 0.803061
AUC of PRC = 0.311862
min(+P, Se) = 0.331731

-------------------------------

confusion matrix:
[[221   2]
 [ 24   1]]

stratified metric for:
demographic variable: Ethnicity
value: BLACK

overall metrics:
prevalence of IHM = 0.100806
average predicted risk of IHM = 0.10522300004959106
difference in average predicted and observed risk = 0.004417000049591058
number samples = 248
accuracy = 0.895161
precision class 0 = 0.902041
precision class 1 = 0.333333
recall class 0 = 0.991031
recall class 1 = 0.04
false negative rate = 0.96
false positive rate = 0.008969
positive prediction rate = 0.012097
AUC of ROC = 0.710493
AUC of PRC = 0.225968
min(+P, Se) = 0.3125

-------------------------------

confusion matrix:
[[477   4]
 [ 71  11]]

stratified metric for:
demographic variable: Ethnicity
value: OTHER

overall metrics:
prevalence of IHM = 0.145648
average predicted risk of IHM = 0.1226079985499382
difference in average predicted and observed risk = -0.023040001450061798
number samples = 563
accuracy = 0.866785
precision class 0 = 0.870438
precision class 1 = 0.733333
recall class 0 = 0.991684
recall class 1 = 0.134146
false negative rate = 0.865854
false positive rate = 0.008316
positive prediction rate = 0.026643
AUC of ROC = 0.833807
AUC of PRC = 0.529944
min(+P, Se) = 0.560976

-------------------------------

confusion matrix:
[[651   4]
 [ 65  14]]

stratified metric for:
demographic variable: Ethnicity
value: HISPANIC

overall metrics:
prevalence of IHM = 0.107629
average predicted risk of IHM = 0.11856400221586227
difference in average predicted and observed risk = 0.010935002215862272
number samples = 734
accuracy = 0.905995
precision class 0 = 0.909218
precision class 1 = 0.777778
recall class 0 = 0.993893
recall class 1 = 0.177215
false negative rate = 0.822785
false positive rate = 0.006107
positive prediction rate = 0.024523
AUC of ROC = 0.812214
AUC of PRC = 0.451764
min(+P, Se) = 0.439024

-------------------------------

confusion matrix:
[[4137   20]
 [ 430   41]]
prevalence of IHM = 0.101772
average predicted risk of IHM = 0.1044749990105629
difference in average predicted and observed risk = 0.0027029990105628954
number samples = 4628
accuracy = 0.902766
precision class 0 = 0.905846
precision class 1 = 0.672131
recall class 0 = 0.995189
recall class 1 = 0.087049
false negative rate = 0.912951
false positive rate = 0.004811
positive prediction rate = 0.013181
AUC of ROC = 0.812506
AUC of PRC = 0.383832
min(+P, Se) = 0.422505

-------------------------------
Traceback (most recent call last):
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/share/pi/boussard/eroosli_work/benchmarking/models/ihm/main.py", line 177, in <module>
    batch_size=args.batch_size)
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/site-packages/keras/engine/training.py", line 1239, in fit
    validation_freq=validation_freq)
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/site-packages/keras/engine/training_arrays.py", line 216, in fit_loop
    callbacks.on_epoch_end(epoch, epoch_logs)
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/site-packages/keras/callbacks/callbacks.py", line 152, in on_epoch_end
    callback.on_epoch_end(epoch, logs)
  File "/share/pi/boussard/eroosli_work/benchmarking/models/keras_utils.py", line 81, in on_epoch_end
    self.calc_metrics(self.train_data, self.train_dem, self.train_history, 'train', logs, epoch)
  File "/share/pi/boussard/eroosli_work/benchmarking/models/keras_utils.py", line 76, in calc_metrics
    path = os.path.join('models/outputs', self.data_name, 'train_predictions', self.date, str(epoch) + ".csv")
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/posixpath.py", line 94, in join
    genericpath._check_arg_types('join', a, *p)
  File "/share/pi/boussard/envs/eroosli_env/lib/python3.7/genericpath.py", line 149, in _check_arg_types
    (funcname, s.__class__.__name__)) from None
TypeError: join() argument must be str or bytes, not 'NoneType'
